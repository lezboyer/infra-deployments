# Prometheus Configuration - Full UI Experience
prometheus:
  enabled: true
  service:
    type: ClusterIP
    port: 9090
  prometheusSpec:
    # Enable the full Prometheus web UI
    web:
      enableLifecycle: true
      enableAdminAPI: true
    # Retention and storage
    retention: 30d
    retentionSize: 45GB
    # Enable all built-in recording rules and alerts
    ruleSelector: {}
    ruleNamespaceSelector: {}
    serviceMonitorSelector: {}
    serviceMonitorNamespaceSelector: {}
    podMonitorSelector: {}
    podMonitorNamespaceSelector: {}
    # Storage configuration
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: "" # Use default storage class
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi

# Prometheus Operator - ensure it's fully enabled
prometheusOperator:
  enabled: true
  # Enable all CRD management
  manageCrds: false  # We installed CRDs separately
  createCustomResource: true
  
# Alertmanager - part of the integrated experience
alertmanager:
  enabled: true
  service:
    type: ClusterIP
    port: 9093
  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: ""
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 5Gi
              
# Grafana - Enhanced integration with Prometheus
grafana:
  enabled: true
  service:
    type: ClusterIP
    port: 80
  adminPassword: admin
  # Pre-configure Prometheus as datasource
  sidecar:
    datasources:
      enabled: true
      defaultDatasourceEnabled: true
  # Enable all the standard dashboards
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default
  # Pre-load important dashboards
  dashboards:
    default:
      prometheus-stats:
        gnetId: 2
        revision: 2
        datasource: Prometheus
      kubernetes-cluster-monitoring:
        gnetId: 7249
        revision: 1
        datasource: Prometheus
        
# Enable all the exporters for complete monitoring
kubeStateMetrics:
  enabled: true
  
nodeExporter:
  enabled: true
  
# Enable Kubernetes component monitoring
kubeApiServer:
  enabled: true
  
kubelet:
  enabled: true
  
kubeControllerManager:
  enabled: true  # Enable if accessible
  endpoints: []  # Auto-discover
  
coreDns:
  enabled: true
  
kubeEtcd:
  enabled: true  # Enable if accessible
  endpoints: []  # Auto-discover
  
kubeScheduler:
  enabled: true  # Enable if accessible
  endpoints: []  # Auto-discover
  
kubeProxy:
  enabled: true
  
# Default rules - this gives you the pre-built alerts and recording rules
defaultRules:
  create: true
  rules:
    alertmanager: true
    etcd: true
    configReloaders: true
    general: true
    k8s: true
    kubeApiserver: true
    kubeApiserverAvailability: true
    kubeApiserverBurnrate: true
    kubeApiserverHistogram: true
    kubeApiserverSlos: true
    kubelet: true
    kubeProxy: true
    kubePrometheusGeneral: true
    kubePrometheusNodeRecording: true
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    kubernetesSystem: true
    kubeScheduler: true
    kubeStateMetrics: true
    network: true
    node: true
    nodeExporterAlerting: true
    nodeExporterRecording: true
    prometheus: true
    prometheusOperator: true